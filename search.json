[{"path":[]},{"path":"https://pfizer-opensource.github.io/zippeR/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement https://www.pfizer.com/contact. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to this Package","title":"Contributing to this Package","text":"Thanks using package. filing issue opening pull request, places explore pieces put together make process smooth possible.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Contributing to this Package","text":"Start making minimal reproducible example (reprex) using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site. Armed reprex, next step figure ask. ’s question: start community.rstudio.com. people answer questions. ’s bug: ’re right place, file issue. ’s feature request: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . can use inquiry issue template get feedback.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CONTRIBUTING.html","id":"before-opening-an-issue","dir":"","previous_headings":"","what":"Before Opening an Issue","title":"Contributing to this Package","text":"opening new issue, sure search issues pull requests make sure bug typo hasn’t reported /already fixed. Similarly, search make sure someone already made suggestion. suggestion want express support , please comment existing issue. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CONTRIBUTING.html","id":"issue-templates","dir":"","previous_headings":"","what":"Issue Templates","title":"Contributing to this Package","text":"go open issue, encouraged select one three templates: bug reports, feature requests, inquiries. help craft issue helpful clear possible!","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CONTRIBUTING.html","id":"pr-process","dir":"","previous_headings":"","what":"PR process","title":"Contributing to this Package","text":"’ve found way contribute, please follow PR process described fork, edit, push proposed changes. recommend opening issue gauge interest spending time working PR!","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CONTRIBUTING.html","id":"fork-clone-branch","dir":"","previous_headings":"PR process","what":"Fork, clone, branch","title":"Contributing to this Package","text":"first thing ’ll need fork package, clone locally. recommend create branch PR.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CONTRIBUTING.html","id":"style","dir":"","previous_headings":"PR process","what":"Style","title":"Contributing to this Package","text":"Match existing code documentation style. careful make style changes code contributing.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CONTRIBUTING.html","id":"document","dir":"","previous_headings":"PR process","what":"Document","title":"Contributing to this Package","text":"Make sure update help files changes impact documents. add new package dependency, please also update DESCRIPTION file dependency part continuous integration testing.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CONTRIBUTING.html","id":"check","dir":"","previous_headings":"PR process","what":"Check","title":"Contributing to this Package","text":"done, make sure changed .Rmd documents knit without error.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CONTRIBUTING.html","id":"commit","dir":"","previous_headings":"PR process","what":"Commit","title":"Contributing to this Package","text":"’ve made changes, write clear commit message describing ’ve done. ’ve fixed closed issue, make sure include keywords (e.g. fixes #101) end commit message (title) automatically close issue PR merged.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CONTRIBUTING.html","id":"push-and-pull","dir":"","previous_headings":"PR process","what":"Push and pull","title":"Contributing to this Package","text":"’ve pushed commit(s) branch fork, ’re ready make pull request. Pull requests descriptive titles remind reviewers/maintainers PR . can easily view exact changes proposing using either Git diff view RStudio, branch comparison view ’ll taken go create new PR. PR related issue, provide issue number slug description using auto-linking syntax (e.g. #15).","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to this Package","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/CONTRIBUTING.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Contributing to this Package","text":"contributing guidelines modified used Jenny Bryan.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/articles/basics.html","id":"zip-code-basics","dir":"Articles","previous_headings":"","what":"ZIP Code Basics","title":"Basics of ZIP Codes and ZCTAs","text":"complete ZIP Code consists two elements - five-digit number four-digit number. Together, nine digits represent specific delivery area (sometimes referred carrier route). first five digits, ’ll refer ZIP Codes shorthand, represent one following: general delivery area, Post Office, facilitate deliveries PO Boxes, single high-volume customer, university, federal agency, large company. common form ZIP Code general delivery area. imagine distinct, non-overlapping regions map, actually collections carrier routes sometimes overlap . individual carrier routes represented second, four-digit number. may correspond particular city block, apartment building, delivery area within ZIP Code. PO Boxes, individual boxes may assigned four-digit number. Generally speaking, four-digit add-especially useful RWE. ZIP codes assigned four types jurisdictions: states, District Columbia, five inhabited territories (American Samoa, Guam, Northern Mariana Islands, Puerto Rico, United States Virgin Islands) well three independent nations (Federated States Micronesia, Republic Marshall Islands, Republic Palau) part Compact Free Association (COFA), federal facilities countries, notably Department Defense installations. Compact Free Association (COFA) wide-ranging legal agreement gives three nations access many U.S. federal services usually considered domestic programs. includes USPS deliveries, three nations assigned ZIP Codes well. ZIP Codes generally patterned regionally, ZIP Codes beginning 0 located Northeast. Values increase westward, highest ZIP Codes Alaska, Hawaii, islands Pacific. ZIP Codes begin 9. States assigned one initial digits. example, New York State primarily ZIP Codes beginning values 10 14 first two digits. However, routine exceptions. 06390 (Fishers Island) also valid ZIP Code New York even though begins 0. Likewise, federal agencies located Maryland Virginia Washington, D.C. assigned ZIP Codes. first digit, therefore, correspond Census Region Division, possible aggregate geographies based first digit alone. ZIP Codes also aggregated counties states complete accuracy. Since ZIP Codes designed facilitate delivery mail, uses, neatly nest jurisdictional boundaries. regularly cross county boundaries, sometimes cross state boundaries well, especially rural areas postal delivery best facilitated neighboring state. Finally, important know ZIP Codes permanent. Carrier routes updated frequently, even ZIP Codes subject revision occasionally. example, ZIP Codes split accommodate population growth housing construction.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/articles/basics.html","id":"three-digit-zip-codes","dir":"Articles","previous_headings":"","what":"Three-Digit ZIP Codes","title":"Basics of ZIP Codes and ZCTAs","text":"Three-digit ZIP Codes specific meaning USPS, sometimes also used patient-level data preserve confidentiality. details working three-digit ZIPs can found separate vignette.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/articles/basics.html","id":"zip-code-tabulation-areas","dir":"Articles","previous_headings":"","what":"ZIP Code Tabulation Areas","title":"Basics of ZIP Codes and ZCTAs","text":"USPS publish map ZIP Codes carrier routes constantly changing revised. Moreover, since ZIP Codes areas maps imagine , suitable aggregation analysis. Census Bureau created ZIP Code Tabulation Areas (ZCTAs) approximate ZIP Code areas purposes data analysis mapping. ZCTAs created aggregating Census blocks first three digits ZIP Codes. means ZCTAs ZIP Codes, carrier routes. useful approximation many purposes, perfect. ZCTAs updated every year, though significant updates occur every decade release Decennial Census. ZCTAs created identifying common ZIP Code within Census Block, dissolving individual Census Blocks together create single polygon. results misclassification address-level, address points within given Census Block assigned ZCTA differs individual ZIP Code. Correcting form misclassification requires point-level address data, may available areas available entire United States. Addressing problem beyond scope zippeR. ZCTAs created areas population, areas sparse populations. affects areas American West, example, residents. Finally, important note ZIP Codes analogous ZCTA. ZIP Codes used Post Office Boxes, included ZCTA data. Using ZIP ZCTA crosswalk files can help address form misclassification, subject separate vignette.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/articles/basics.html","id":"zip-code-and-zcta-formatting","dir":"Articles","previous_headings":"","what":"ZIP Code and ZCTA Formatting","title":"Basics of ZIP Codes and ZCTAs","text":"One core features zippeR validate inputs ZIP codes ZCTA codes. example, set ZCTAs lie Missouri/Iowa border: Notice last element contains non-numeric character. zcta5 passed zi_validate(), catch formatting issue. two options, one returns single logical value (TRUE FALSE): option, verbose = TRUE, provides additional data formatting issues may exist: third fourth tests, users strongly encourage attempt manually correct problems. However, zi_repair() can used address first second tests, return NA values ZIPs ZCTAs pass third fourth tests: malformed ZIPs ZCTAs replaced NA values, zi_repair() return warning. Note zi_validate() also works three-digit ZCTAs well: Note , time, validation process ensure inputs correspond valid ZCTAs.","code":"zcta5 <- c(\"51640\", \"52542\", \"52573\", \"5262x\") > library(zippeR) > zi_validate(zcta5) [1] FALSE > zi_validate(zcta5, verbose = TRUE) # A tibble: 4 × 2   condition                                   result   <chr>                                       <lgl>  1 Input is a character vector?                TRUE   2 All input values have 5 characters?         TRUE   3 No input values are over 5 characters long? TRUE   4 All input values are numeric?               FALSE > zi_repair(zcta5) [1] \"51640\" \"52542\" \"52573\" NA      Warning message: In zi_repair(zcta5) : NAs introduced by coercion > zcta3 <- c(\"516\", \"525\", \"526\") > zi_validate(zcta3, style = \"zcta3\") [1] TRUE"},{"path":"https://pfizer-opensource.github.io/zippeR/articles/converting-zips.html","id":"udss-zip-code-to-zcta-crosswalks","dir":"Articles","previous_headings":"","what":"UDS’s ZIP Code to ZCTA Crosswalks","title":"Converting ZIP Codes to Other Geographies","text":"zippeR provides interface accessing former UDS Mapper project’s ZIP ZCTA crosswalk files](http://web.archive.org/web/20231218141557/https://udsmapper.org/zip-code--zcta-crosswalk/). Crosswalk files critical ZIP codes exact ZCTA. UDS files available 2010 2021 standardized format: three-digit ZCTA geometry, users evaluate data carefully using ensure fit purpose. particular, note ZIPs corresponding ZCTAs (Armed Forces mailing ZIPs overseas territories) included. Users also remember individuals may live different ZCTA mailing address address Post Office large volume customer. can used zi_crosswalk() convert given ZIP codes ZCTAs: \"UDS 2021\" (year 2009 2023) given dict, zi_crosswalk() automatically download corresponding UDS crosswalk file. custom crosswalk can also supplied dict lieu using UDS data, including crosswalk created zi_load_crosswalk() using HUD data. case, dict_zip dict_zcta updated correctly match input variable names. style can also used custom dictionary contains three digit ZCTAs instead. custom dictionary supplied, zi_crosswalk() try convert dictionary’s five-digit ZCTAs three-digits:","code":"> zi_load_crosswalk(year = 2020) # A tibble: 41,096 × 6                                                                                                                                                                                     ZIP   PO_NAME    STATE ZIP_TYPE                             ZCTA  zip_join_type           <chr> <chr>      <chr> <chr>                                <chr> <chr>                 1 00501 Holtsville NY    Post Office or large volume customer 11742 Spatial join to ZCTA  2 00544 Holtsville NY    Post Office or large volume customer 11742 Spatial join to ZCTA  3 00601 Adjuntas   PR    ZIP Code Area                        00601 ZIP Matches ZCTA      4 00602 Aguada     PR    ZIP Code Area                        00602 ZIP Matches ZCTA      5 00603 Aguadilla  PR    ZIP Code Area                        00603 ZIP Matches ZCTA      6 00604 Aguadilla  PR    Post Office or large volume customer 00603 Spatial join to ZCTA  7 00605 Aguadilla  PR    Post Office or large volume customer 00603 Spatial join to ZCTA  8 00606 Maricao    PR    ZIP Code Area                        00606 ZIP Matches ZCTA      9 00610 Anasco     PR    ZIP Code Area                        00610 ZIP Matches ZCTA     10 00611 Angeles    PR    Post Office or large volume customer 00641 Spatial join to ZCTA # … with 41,086 more rows > zips <- data.frame(id = c(1:3), ZIP = c(\"63139\", \"63108\", \"00501\")) > zi_crosswalk(zips, input_zip = ZIP, dict = \"UDS 2021\")  # A tibble: 3 × 3                                                                                                                                                                                            id ZIP   ZCTA    <int> <chr> <chr> 1     1 63139 63139 2     2 63108 63108 3     3 00501 11742 > zi_crosswalk(zips, input_zip = ZIP, dict = \"UDS 2021\", style = \"zcta3\")  Dictionary five-digit ZCTAs converted to three-digit ZCTAs.                                                                                                                                             # A tibble: 3 × 3      id ZIP   ZCTA3   <int> <chr> <chr> 1     1 63139 631   2     2 63108 631   3     3 00501 117"},{"path":"https://pfizer-opensource.github.io/zippeR/articles/converting-zips.html","id":"huds-zip-code-to-census-geography-crosswalks","dir":"Articles","previous_headings":"","what":"HUD’s ZIP Code to Census Geography Crosswalks","title":"Converting ZIP Codes to Other Geographies","text":"U.S. Housing Urban Development (HUD) Department provides ZIP code Census geography crosswalks can used convert ZIP codes Census Tracts, counties, geographies. data available HUD User website. Unlike UDS files, ZIP Code Tabulation Areas one geographies including. HUD data used, aware ZIP Codes mapping multiple Census Tracts, counties, etc. Many users may want pick “likely” county (Census geometry) based proportion commercial residential customers. use HUD data, users must first obtain API key HUD User website. API key, can use zi_load_crosswalk() download data either passing key directly function storing key .Rprofile object name hud_key: key can also passed zi_load_crosswalk directly key argument: Queries can either single ZIP Code, vector ZIP Codes, state abbreviation, word \"\" download entire crosswalk file. Using states \"\" available 1st quarter 2021 onwards. target argument can set “COUNTY”, “TRACT”, “CBSA”, “CBSADIV”, “CD”, “COUNTYSUB”. year qtr arguments specify year quarter data download. Note query finds ZIP Code 63138 straddles two counties, vast majority residential commercial customers St. Louis City (GEOID 29510). building crosswalk file , might want select St. Louis City “likely” county ZIP Code 63138. Since using HUD data requires number analytic choices, accessed directly zi_crosswalk(). Instead, construct desired crosswalk file pass zi_crosswalk() custom dictionary. zi_prep_hud() function can help prepare HUD data use joins: resulting output contains one row data ZIP Code matched county highest proportion residential ZIP Codes. Users can also construct crosswalk using commercial addresses total addresses. used multiple states, ZIP Code straddles two states, two records returned.","code":"Sys.setenv(hud_key = \"<PASTE KEY>\") > zi_load_crosswalk(zip_source = \"HUD\", year = 2023, qtr = 1, target = \"COUNTY\", +                   query = c(\"63138\", \"63139\")) # A tibble: 3 × 8   ZIP   GEOID RES_RATIO BUS_RATIO OTH_RATIO TOT_RATIO CITY        STATE   <chr> <chr>     <dbl>     <dbl>     <int>     <dbl> <chr>       <chr> 1 63138 29189  0.999       0.988          1  0.999    SAINT LOUIS MO    2 63138 29510  0.000518    0.0124         0  0.000956 SAINT LOUIS MO    3 63139 29510  1           1              1  1        SAINT LOUIS MO # access to HUD ZIP Code to County crosswalk for all ZIP Codes in Missouri mo <- zi_load_crosswalk(zip_source = \"HUD\", year = 2023, qtr = 1,    target = \"COUNTY\", query = \"MO\")  # prep data mo <- zi_prep_hud(mo, by = \"residential\")"},{"path":"https://pfizer-opensource.github.io/zippeR/articles/demographic-geometric-zcta-data.html","id":"zcta-geometry","dir":"Articles","previous_headings":"","what":"ZCTA Geometry","title":"Demographic and Geometric ZCTA Data","text":"zippeR providers support downloading geometric data sf objects. five-digit ZCTAs, tigris used access TIGER/Line database. three-digit ZCTAs, downloaded repository GitHub maintained author. generalized versions ZCTA geometry designed provide smaller file size suitable storage GitHub. Nevertheless, file still approximately 60MB size. Users carefully evaluate geometric data ensure fit purpose, note provided without warranty. One major difference tigris::zctas() zipper::get_geometry() zippeR provides support automatically returning ZCTAs intersect whose centroids lie within states /counties. can used five- three-digit ZCTAs. general, intersect method yield ZCTAs necessary centroid method yield . example, Missouri, need use includes argument add several additional ZCTAs whose centroids fall within Missouri (lie Iowa): use intersect method, corresponding excludes argument can used drop ZCTAs needed. Note ZCTAs passed starts_with (accepts two-digit values), includes, excludes validated ensure follow formatting requirements. noted , validation process ensure inputs correspond valid ZCTAs time. One additional option note , downloading nation-wide ZCTA data, can use shift_geo argument place Alaska, Hawaii, Puerto Rico lower left-hand corner map:","code":"geo12 <- zi_get_geometry(year = 2012, state = \"MO\", method = \"centroid\",      includes = c(\"51640\", \"52542\", \"52573\", \"52626\")) geo10 <- zi_get_geometry(year = 2010, shift_geo = TRUE)"},{"path":"https://pfizer-opensource.github.io/zippeR/articles/demographic-geometric-zcta-data.html","id":"zcta-demographics","dir":"Articles","previous_headings":"","what":"ZCTA Demographics","title":"Demographic and Geometric ZCTA Data","text":"Downloading geometric data can used mapping, simply produce vector five- three-digit ZCTAs given area. , -turn, can used define areas demographic data desired. zi_get_demographics() wraps tidycensus functions get data using single, uniform API. instance, can download total population ZCTAs based 2010 Decennial Census: Note: now, Census Bureau released ZCTA data 2020 Decennial Census. working output zi_get_geometry(), can specify GEOID vector call limit number ZCTAs returned:","code":"pop10 <- zi_get_demographics(year = 2010, variables = \"P001001\", survey = \"sf1\") gini12 <- zi_get_demographics(year = 2012, table = \"B19083\", survey = \"acs5\", zcta = geo12$GEOID)"},{"path":"https://pfizer-opensource.github.io/zippeR/articles/three-digit-zips.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Three-digit ZIP Codes and ZCTAs","text":"Three-digit ZIP Codes refer group ZIP Codes share first three digits. example, St. Louis, Missouri ZIP Codes 63101, 63102, 63103 part 631 three-digit ZIP Code. first three digits correspond “sectional center facilities” (SCFs) operated United States Postal Service (USPS). Sectional center facilities sit larger “network distribution centers” (NDCs) local post offices, sorting distributing mail. SCF one three-digit ZIP Codes associated . SCF St. Louis St. Louis City, Missouri, services approximately dozen three-digit ZIP Codes Eastern Missouri Southern Illinois. Unlike five-digit ZIP Codes, Census Bureau analogue ZIP Code Tabulation Areas (ZCTAs), Census equivalent three-digit ZIP Codes. three-digit ZIP Codes geographic areas, rather mail sorting facilities. Aggregating ZCTAs using first three digits illustrate yet another challenge - boundaries three-digit ZCTAs contiguous. means ZCTAs split multiple pieces adjacent . first three-digits three digits given, possible use ZIP ZCTA crosswalk files included zippeR. increases misclassification rate, observations assigned wrong three-digit ZCTA. example, ZIP Code 64999 Kansas City part 649 three-digit ZIP Code, part 649 three-digit ZCTA. According 2022 UDS crosswalk file, appropriate ZCTA 64999 64108, 641 three-digit ZIP Code. zippeR provides several functions downloading using three-digit ZCTA data. used caution user aware limitations data described .","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/articles/three-digit-zips.html","id":"labeling-three-digit-zip-codes","dir":"Articles","previous_headings":"","what":"Labeling Three-digit ZIP Codes","title":"Three-digit ZIP Codes and ZCTAs","text":"zi_load_labels() function can used load set labels three-digit ZIP Codes. function requires type argument, set \"zip3\". function return tibble area state associated SCF assigned particular three-digit ZIP. Use values caution - area state may correspond physical location associated five-digit ZIP Codes. example, three-digit ZIP 010 covers Western Massachusetts. However, SCF serves located Hartford, CT. label_area label_state values based SCF location, geographic area served three-digit ZIP Code. zi_label() function can used label data values. five-digit ZIP Codes want convert three-digit ZIPs, zi_convert() function helpful tool shortening values quickly.","code":"> zi_load_labels(source = \"USPS\", type = \"zip3\", vintage = 202408) # A tibble: 931 × 3                                                                                                                                                                                        zip3  label_area label_state    <chr> <chr>      <chr>        1 005   MID-ISLAND NY           2 006   SAN JUAN   PR           3 007   SAN JUAN   PR           4 008   SAN JUAN   PR           5 009   SAN JUAN   PR           6 010   HARTFORD   CT           7 011   HARTFORD   CT           8 012   HARTFORD   CT           9 013   CENTRAL    MA          10 014   CENTRAL    MA          # ℹ 921 more rows # ℹ Use `print(n = ...)` to see more rows"},{"path":"https://pfizer-opensource.github.io/zippeR/articles/three-digit-zips.html","id":"downloading-geometric-data-for-three-digit-zctas","dir":"Articles","previous_headings":"","what":"Downloading Geometric Data for Three-digit ZCTAs","title":"Three-digit ZIP Codes and ZCTAs","text":"Three-digit ZCTA geometric data can downloaded using zi_get_geometry(). following syntax downloads ZCTA3 United States, excluding overseas territories: Optionally, can specify specific state, county, territory limit data object’s extent: zi_get_geometry() function downloads pre-made geometric data Census Bureau’s TIGER/Line Shapefiles, created downloading ZCTA data, grouping features first three digits ZCTA, summarizing features dissolve . Finally, sf::st_simplify(, preserveTopology = TRUE, dTolerance = 20) used simplify features reduce size file. Data available 2010 2023, excluding 2011. specific state county requested using optional arguments, included ZCTAs defined using either method = \"intersect\" method = \"centroid\". \"intersect\" approach includes ZCTA touches given state county area greater 0, \"centroid\" approach includes ZCTA whose geographic midpoint lies within requested state county.","code":"zcta3 <- zi_get_geometry(year = 2020, style = \"zcta3\", territory = NULL, method = \"intersect\") mo_zcta3 <- zi_get_geometry(year = 2020, style = \"zcta3\", state = \"MO\", territory = NULL, method = \"intersect\")"},{"path":"https://pfizer-opensource.github.io/zippeR/articles/three-digit-zips.html","id":"creating-demographic-estimates-for-three-digit-zctas","dir":"Articles","previous_headings":"","what":"Creating Demographic Estimates for Three-digit ZCTAs","title":"Three-digit ZIP Codes and ZCTAs","text":"Creating master list three-digit ZCTAs pre-requisite creating demographic estimates geographies. object created , mo_zcta3, ZCTA3 column can serve reference. list, download demographic data using zi_get_demographics(). example, download population estimates 2020, use following code: sure limit download zcta argument. important ZCTAs included download, even list three-digit ZCTAs. five-digit ZCTAs overlap state county interest included, get incorrect values ZCTAs split across multiple jurisdictions. obtained, can pass object zi_aggregate() can specify input zcta stage: aggregate population estimates five-digit ZCTAs three-digit ZCTAs. zi_aggregate() function requires specify two sets variable lists - extensive (.e. count data) intensive (.e. ratio median data). extensive data, zi_aggregate() sums estimates applies formula margins error (square root sum squared margins error five-digit ZCTA within three-digit region). intensive variables, weighted mean median used estimate margin error. Note can pipe workflow can specify multiple variables aggregation: variables, table (can used place variables zi_get_demographics()), extensive, intensive arguments validated passed via tidycensus Census Bureau, incorrectly formatted variable table names generate potentially cryptic errors.","code":"mo_pop20 <- zi_get_demographics(year = 2020, variables = \"B01003_001\", survey = \"acs5\") mo_pop20 <- zi_aggregate(mo_pop20, year = 2020, extensive = \"B01003_001\", survey = \"acs5\", zcta = mo_zcta3$ZCTA3) zi_get_demographics(year = 2020, variables = c(\"B01003_001\", \"B19083_001\"), survey = \"acs5\") %>%   zi_aggregate(year = 2020, extensive = \"B01003_001\", intensive = \"B19083_001\", survey = \"acs5\") -> demo20"},{"path":"https://pfizer-opensource.github.io/zippeR/articles/three-digit-zips.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Three-digit ZIP Codes and ZCTAs","text":"Three-digit ZIP codes common, especially health care data, challenging work . zippeR provides set tools calculating demographic estimates American Community Survey mapping , done caution based limitations described .","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christopher Prener. Author, maintainer. Timothy Wiemken. Author. Angela Cook. Author.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Prener C, Wiemken T, Cook (2025). zippeR: Working United States ZIP Code ZIP Code Tabulation Area Data. R package version 0.1.1.9000, https://github.com/pfizer-opensource/zippeR.","code":"@Manual{,   title = {zippeR: Working with United States ZIP Code and ZIP Code Tabulation Area Data},   author = {Christopher Prener and Timothy Wiemken and Angela Cook},   year = {2025},   note = {R package version 0.1.1.9000},   url = {https://github.com/pfizer-opensource/zippeR}, }"},{"path":[]},{"path":"https://pfizer-opensource.github.io/zippeR/index.html","id":"motivation","dir":"","previous_headings":"","what":"Motivation","title":"Working with United States ZIP Code and ZIP Code Tabulation Area Data","text":"zippeR provides set functions working ZIP Codes ZCTAs well building spatial demographic data three-digit ZCTAs. three-digit ZCTAs limitations (large regions), also used within American health care protect patient confidentiality. zippeR therefore offers researchers must use three-digit ZCTAs capability download geometric data also aggregate demographic data five-digit ZCTAs three-digit ZCTAs. addition, zippeR includes functions validating formatting vectors ZIP Codes ZCTAs well tools cross-walking ZIP codes ZCTAs.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"Working with United States ZIP Code and ZIP Code Tabulation Area Data","text":"easiest way get started zippeR install CRAN: development version zippeR can accessed GitHub remotes:","code":"install.packages(\"zippeR\") # install.packages(\"remotes\") remotes::install_github(\"pfizer-evgen/zippeR\")"},{"path":"https://pfizer-opensource.github.io/zippeR/index.html","id":"resources","dir":"","previous_headings":"","what":"Resources","title":"Working with United States ZIP Code and ZIP Code Tabulation Area Data","text":"zippeR site includes dedicated articles following topics: * ZIP Code ZIP Code Tabulation Area Basics * Converting ZIP Codes Geographies * Demographic Geometric ZCTA Data * Three-digit ZIP Codes ZCTAs","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/index.html","id":"feedback-and-code-of-conduct","dir":"","previous_headings":"","what":"Feedback and Code of Conduct","title":"Working with United States ZIP Code and ZIP Code Tabulation Area Data","text":"feedback zippeR, please open issue GitHub checking contribution guidelines. Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate ZCTAs to Three-digit ZCTAs — zi_aggregate","title":"Aggregate ZCTAs to Three-digit ZCTAs — zi_aggregate","text":"function takes input ZCTA data aggregates three-digit    areas, considerably larger. regions sometimes used    American health care contexts publishing geographic identifiers.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate ZCTAs to Three-digit ZCTAs — zi_aggregate","text":"","code":"zi_aggregate(.data, year, extensive = NULL, intensive = NULL,     intensive_method = \"mean\", survey, output = \"tidy\", zcta = NULL,     key = NULL)"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate ZCTAs to Three-digit ZCTAs — zi_aggregate","text":".data tidy set demographic data containing one variables aggregated three-digit ZCTAs. data frame tibble contain five-digit ZCTAs within three digit ZCTAs plan use aggregating data. See Details formatting requirements. year four-digit numeric scalar year. zippeR currently supports data 2010 2022. Different survey products available different years. See survey parameter details. extensive character scalar vector listing extensive (.e. count data) variables wish aggregate. summed. American Community Survey data, margin error calculated taking square root summed, squared margins error five-digit ZCTA within given three-digit ZCTA. intensive character scalar vector listing intensive (.e. ratio, percent, median data) variables wish aggregate. combined using approach listed intensive_method. intensive_method character scalar; either \"mean\" (default) \"median\". either case, weighted approach used total population five-digit ZCTA used calculate individual ZCTAs' weights. American Community Survey Data, applied margin error well. survey character scalar representing Census product. can either Decennial Census product (either \"sf1\" \"sf3\") American Community Survey product (either \"acs1\", \"acs3\", \"acs5\"). Decennial Census calls, 2010 Census available. addition, variable found \"sf1\", function look \"sf3\". Also note \"acs3\" discontinued 2013. output character scalar; one \"tidy\" (long output) \"wide\" depending type data format want. planning join data geometric data, \"wide\" strongly encouraged format. zcta optional vector ZCTAs demographic data requested . NULL, data returned ZCTAs. vector supplied, data requested ZCTAs returned. vector can created zi_get_geometry(). style = \"zcta5\", vector made five-digit GEOID values. style = \"zcta3\", vector made three-digital ZCTA3 values. key Census API key, can obtained https://api.census.gov/data/key_signup.html. can omitted tidycensus::census_api_key() used write key .Renviron file. can check whether API key written .Renviron using Sys.getenv(\"CENSUS_API_KEY\").","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_aggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate ZCTAs to Three-digit ZCTAs — zi_aggregate","text":"tibble containing aggregated data requested either     \"tidy\" \"wide\" format.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_aggregate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate ZCTAs to Three-digit ZCTAs — zi_aggregate","text":"","code":"# load sample demographic data mo22_demos <- zi_mo_pop    # the above data can be replicated with the following code:   # zi_get_demographics(year = 2022, variables = c(\"B01003_001\", \"B19013_001\"),   #   survey = \"acs5\")  # load sample geometric data mo22_zcta3 <- zi_mo_zcta3    # the above data can be replicated with the following code:   # zi_get_geometry(year = 2022, style = \"zcta3\", state = \"MO\",   #   method = \"intersect\")  # aggregate a single variable zi_aggregate(mo22_demos, year = 2020, extensive = \"B01003_001\", survey = \"acs5\",   zcta = mo22_zcta3$ZCTA3) #> # A tibble: 62 × 4 #> # Groups:   ZCTA3 [31] #>    ZCTA3 variable   estimate     moe #>    <chr> <chr>         <dbl>   <dbl> #>  1 501   B01003_001   190606   1928. #>  2 501   B19013_001  4927943 224587. #>  3 516   B01003_001    22779    649. #>  4 516   B19013_001  1326659 128553. #>  5 525   B01003_001   109992   1607. #>  6 525   B19013_001  2965635 153947. #>  7 526   B01003_001   101629   1496. #>  8 526   B19013_001  2187815 116391. #>  9 620   B01003_001   296331   2842. #> 10 620   B19013_001  4623927 163752. #> # ℹ 52 more rows  # \\donttest{ # aggregate multiple variables, outputting wide data zi_aggregate(mo22_demos, year = 2020,   extensive = \"B01003_001\", intensive = \"B19013_001\", survey = \"acs5\",   zcta = mo22_zcta3$ZCTA3, output = \"wide\") #> Warning: • You have not set a Census API key. Users without a key are limited to 500 #> queries per day and may experience performance limitations. #> ℹ For best results, get a Census API key at #> http://api.census.gov/data/key_signup.html and then supply the key to the #> `census_api_key()` function to use it throughout your tidycensus session. #> This warning is displayed once per session. #> # A tibble: 31 × 5 #> # Groups:   ZCTA3 [31] #>    ZCTA3 B01003_001E B01003_001M B19013_001E B19013_001M #>    <chr>       <dbl>       <dbl>       <dbl>       <dbl> #>  1 501        190606       1928.      74666.      19684. #>  2 516         22779        649.      69824.      21896. #>  3 525        109992       1607.      63099.      17528. #>  4 526        101629       1496.      70575.      16179. #>  5 620        296331       2842.      66056.      16494. #>  6 630        736536       7216.      84735.      12280. #>  7 631        901642       8313.      69807.       9031  #>  8 633        536266       5361.      78343.      16652  #>  9 634         67129       1583.      60690.      21671. #> 10 635         60410       1185.      54968.      17621. #> # ℹ 21 more rows # }"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_convert.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Five-digit ZIP Codes to Three-digit ZIP Codes — zi_convert","title":"Convert Five-digit ZIP Codes to Three-digit ZIP Codes — zi_convert","text":"function converts five-digit ZIP Codes three-digit ZIP     Codes. first three digits ZIP Code known ZIP3 Code,     corresponds sectional center facility (SCF) processes mail     region.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_convert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Five-digit ZIP Codes to Three-digit ZIP Codes — zi_convert","text":"","code":"zi_convert(.data, input_var, output_var)"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_convert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Five-digit ZIP Codes to Three-digit ZIP Codes — zi_convert","text":".data data frame containing column five-digit ZIP Codes. input_var character scalar specifying column name five-digit ZIP Codes data frame. output_var Optional; character scalar specifying column name store three-digit ZIP Codes data frame.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_convert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Five-digit ZIP Codes to Three-digit ZIP Codes — zi_convert","text":"tibble containing original data frame new column   three-digit ZIP Codes.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_convert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Five-digit ZIP Codes to Three-digit ZIP Codes — zi_convert","text":"","code":"# add new column ## create sample data df <- data.frame(id = c(1:3), zip5 = c(\"63005\", \"63139\", \"63636\"))  ## convert ZIP Codes to ZIP3, creating a new column zi_convert(.data = df, input_var = zip5, output_var = zip3) #> Warning: The given 'output_var' column, 'zip5', was found in your data object, and the column was overwritten. #> # A tibble: 3 × 2 #>      id zip5  #>   <int> <chr> #> 1     1 630   #> 2     2 631   #> 3     3 636    # overwrite existing column ## create sample data df <- data.frame(id = c(1:3), zip = c(\"63005\", \"63139\", \"63636\"))  ## convert ZIP Codes to ZIP3, creating a new column zi_convert(.data = df, input_var = zip) #> # A tibble: 3 × 2 #>      id zip   #>   <int> <chr> #> 1     1 630   #> 2     2 631   #> 3     3 636"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_crosswalk.html","id":null,"dir":"Reference","previous_headings":"","what":"Crosswalk ZIP Codes with UDS, HUD, or a Custom Dictionary — zi_crosswalk","title":"Crosswalk ZIP Codes with UDS, HUD, or a Custom Dictionary — zi_crosswalk","text":"function compares input data containing ZIP Codes     crosswalk file append ZCTAs. important step     ZIP Codes five digits enclosing ZCTA.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_crosswalk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crosswalk ZIP Codes with UDS, HUD, or a Custom Dictionary — zi_crosswalk","text":"","code":"zi_crosswalk(.data, input_var, zip_source = \"UDS\", source_var,     source_result, year = NULL, qtr = NULL, target = NULL, query = NULL,     by = NULL, return_max = NULL, key = NULL, return = \"id\")"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_crosswalk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crosswalk ZIP Codes with UDS, HUD, or a Custom Dictionary — zi_crosswalk","text":".data \"input object\" data.frame tibble contains ZIP Codes crosswalked. input_var column input data contains five-digit ZIP Codes. input numeric, transformed character data leading zeros added. zip_source Required character scalar data frame; specifies source ZIP Code crosswalk data. can one either \"UDS\" (default) \"HUD\", data frame containing custom dictionary. source_var Character scalar, required zip_source data frame containing custom dictionary; specifies column name dictionary object contains ZIP Codes. source_result Character scalar, required zip_source data frame containing custom dictionary; specifies column name dictionary object contains ZCTAs, GEOIDs, values. year Optional four-digit numeric scalar year; varies based source. \"UDS\", years 2009 2023 available. \"HUD\", years 2010 2024 available. need specified custom dictionary used. qtr Numeric scalar, required zip_code \"HUD\". Integer value 1 4, representing quarter year. target Character scalar, required zip_code \"HUD\". Can one \"TRACT\", \"COUNTY\", \"CBSA\", \"CBSADIV\", \"CD\", \"COUNTYSUB\". query Scalar vector, required zip_code \"HUD\". can five-digit numeric character ZIP Code, vector ZIP Codes, two-letter character state abbreviation, \"\". Character scalar, required zip_code \"HUD\"; column name use identifying best match given ZIP Code. either \"residential\", \"commercial\", \"total\". return_max Logical scalar, required zip_code \"HUD\"; TRUE (default), geography highest proportion ZIP Code type returned. ZIP Code straddles two states, two records returned. FALSE, records ZIP Code returned. tie exists (.e. two geographies contain half addresses), county lowest GEOID value returned. key Optional zip_code \"HUD\". character string containing HUD API key. Alternatively, can stored .RProfile hud_key. return Character scalar, specifies type output return. Can one \"id\" (default), appends crosswalked value, \"\", returns entire crosswalk file appended source data.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_crosswalk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crosswalk ZIP Codes with UDS, HUD, or a Custom Dictionary — zi_crosswalk","text":"tibble crosswalk values (optionally, full     crosswalk file) appended based return argument.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_crosswalk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Crosswalk ZIP Codes with UDS, HUD, or a Custom Dictionary — zi_crosswalk","text":"","code":"# create sample data df <- data.frame(id = c(1:3), zip5 = c(\"63005\", \"63139\", \"63636\"))  # UDS crosswalk # \\donttest{   zi_crosswalk(df, input_var = zip5, zip_source = \"UDS\", year = 2022) #> # A tibble: 3 × 3 #>   zip5     id source_zcta #>   <chr> <int> <chr>       #> 1 63005     1 63005       #> 2 63139     2 63139       #> 3 63636     3 63636       # }  # HUD crosswalk # you will need to replace INSERT_HUD_KEY with your own key if (FALSE) { # \\dontrun{   zi_crosswalk(df, input_var = zip5, zip_source = \"HUD\", year = 2023,     qtr = 1, target = \"COUNTY\", query = \"MO\", by = \"residential\",     return_max = TRUE, key = INSERT_HUD_KEY) } # }  # custom dictionary ## load sample crosswalk data to simulate custom dictionary mo_xwalk <- zi_mo_hud  # prep crosswalk # when a ZIP Code crosses county boundaries, the portion with the largest # number of residential addresses will be returned mo_xwalk <- zi_prep_hud(mo_xwalk, by = \"residential\", return_max = TRUE) #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #> Warning: error 1 in extracting from zip file #> Error: Cannot open \"/tmp/Rtmp82OOpo\"; The source could be corrupt or not supported. See `st_drivers()` for a list of supported formats.  ## crosswalk zi_crosswalk(df, input_var = zip5, zip_source = mo_xwalk, source_var = zip5,   source_result = geoid) #> Error in zi_crosswalk(df, input_var = zip5, zip_source = mo_xwalk, source_var = zip5,     source_result = geoid): The given 'source_var' column is not found in your dictionary object."},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_get_demographics.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Demographic Data for Five-digit ZCTAs — zi_get_demographics","title":"Download Demographic Data for Five-digit ZCTAs — zi_get_demographics","text":"function returns demographic data five-digit ZIP Code     Tabulation Areas (ZCTAs), rough approximations many (    ) USPS ZIP codes.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_get_demographics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Demographic Data for Five-digit ZCTAs — zi_get_demographics","text":"","code":"zi_get_demographics(year, variables = NULL, table = NULL,     survey, output = \"tidy\", zcta = NULL, key = NULL)"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_get_demographics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Demographic Data for Five-digit ZCTAs — zi_get_demographics","text":"year four-digit numeric scalar year. zippeR currently supports data 2010 2022. Different survey products available different years. See survey parameter details variables character scalar vector variable IDs. table character scalar table ID (one table may requested per call). survey character scalar representing Census product. can either Decennial Census product (either \"sf1\" \"sf3\") American Community Survey product (either \"acs1\", \"acs3\", \"acs5\"). Decennial Census calls, 2010 Census available. addition, variable found \"sf1\", function look \"sf3\". Also note \"acs3\" discontinued 2013. output character scalar; one \"tidy\" (long output) \"wide\" depending type data format want. planning pass data zi_aggregate(), must choose \"tidy\". leaving data five-digit ZCTAs planning join geometric data, \"wide\" strongly encouraged format. zcta optional vector ZCTAs demographic data requested . NULL, data returned ZCTAs. vector supplied, data requested ZCTAs returned. vector can created zi_get_geometry() contain five-digit ZCTAs. key Census API key, can obtained https://api.census.gov/data/key_signup.html. can omitted tidycensus::census_api_key() used write key .Renviron file. can check whether API key written .Renviron using Sys.getenv(\"CENSUS_API_KEY\").","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_get_demographics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Demographic Data for Five-digit ZCTAs — zi_get_demographics","text":"tibble containing demographic data requested either     \"tidy\" \"wide\" format.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_get_demographics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Demographic Data for Five-digit ZCTAs — zi_get_demographics","text":"","code":"# \\donttest{   # download all ZCTAs   zi_get_demographics(year = 2012, variables = \"B01003_001\", survey = \"acs5\") #> # A tibble: 33,120 × 4 #>    GEOID variable   estimate   moe #>    <chr> <chr>         <dbl> <dbl> #>  1 00601 B01003_001    18544   271 #>  2 00602 B01003_001    41640   147 #>  3 00603 B01003_001    54540   735 #>  4 00606 B01003_001     6593   270 #>  5 00610 B01003_001    29141   180 #>  6 00612 B01003_001    69017  1500 #>  7 00616 B01003_001    10750  1084 #>  8 00617 B01003_001    24733   171 #>  9 00622 B01003_001     5923   984 #> 10 00623 B01003_001    44943   984 #> # ℹ 33,110 more rows    # limit output to subset of ZCTAs   ## download all ZCTAs in Missouri, intersects method   mo20 <- zi_get_geometry(year = 2020, state = \"MO\", method = \"intersect\") #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #> Warning: error 1 in extracting from zip file #> Error: Cannot open \"/tmp/Rtmp82OOpo\"; The source could be corrupt or not supported. See `st_drivers()` for a list of supported formats.    ## download demographic data   zi_get_demographics(year = 2012, variables = \"B01003_001\", survey = \"acs5\",       zcta = mo20$GEOID) #> Error: object 'mo20' not found # }"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_get_geometry.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Optionally Geoprocess ZCTAs — zi_get_geometry","title":"Download and Optionally Geoprocess ZCTAs — zi_get_geometry","text":"function returns geometric data ZIP Code Tabulation     Areas (ZCTAs), rough approximations many ()     USPS ZIP codes. Downloading processing data heavily     affected internet connection, choice cb     argument, processing power computer (select     specific counties).","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_get_geometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Optionally Geoprocess ZCTAs — zi_get_geometry","text":"","code":"zi_get_geometry (year, style = \"zcta5\", return = \"id\", class = \"sf\",     state = NULL, county = NULL, territory = NULL, cb = FALSE,     starts_with = NULL, includes = NULL, excludes = NULL, method,     shift_geo = FALSE)"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_get_geometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Optionally Geoprocess ZCTAs — zi_get_geometry","text":"year four-digit numeric scalar year. zippeR currently supports data 2010 2023 style character scalar - either \"zcta5\" \"zcta3\". See Details . return character scalar; \"id\" (default), five-digit number ZCTA (three-digit style = \"zcta3\") returned. valid option  style = \"zcta3\". style = \"zcta5\", return = \"full\", TIGER/Line columns returned. class character scalar; \"sf\" (default), sf object suitable mapping returned. \"tibble\", object omits geometric data returned instead. state character scalar vector character state abbreviations (e.x. \"MO\") numeric FIPS codes (e.x. 29). ZCTAs within given states (determined based combination year method) returned. See Details information. argument optional unless argument also specified county. county character scalar vector character GEOIDs (e.x. \"29510\"). ZCTAs within given states (determined based combination year method) returned. See Details information. argument optional. territory character scalar vector character territory abbreviations (e.x. \"PR\") numeric FIPS codes (e.x. 72). ZCTAs within given territories returned. default, territories excluded. five territory abbreviations : \"\" (American Samoa), \"GU\" (Guam), \"MP\" (Northern Mariana Islands), \"PR\" (Puerto Rico), \"VI\" (U.S. Virgin Islands). cb logical scalar; FALSE, detailed TIGER/Line     data used style = \"zcta5\". TRUE,     generalized (1:500k) version data used. generalized     data download significantly faster, though show less detail.     According tigris::zctas() documentation, download size     TRUE ~65MB ~500MB cb = FALSE. argument apply style = \"zcta3\", returns     generalized data. also apply class = \"tibble\". starts_with character scalar vector containing first two digits GEOID ZCTA3 value return. defaults NULL, return ZCTAs US. example, supplying argument starts_with = c(\"63\", \"64\") return ZCTAs ZCTA3s begin 63 64. supply state county, limit data argument applied , potentially leading missed ZCTAs. includes character scalar vector containing GEOID's ZCTA3 values include finalizing output. may necessary depending identified method argument. excludes character scalar vector containing GEOID's ZCTA3 values exclude finalizing output. may necessary depending identified method argument. method character scalar - either \"intersect\" \"centroid\". See Details . shift_geo logical scalar; TRUE, Alaska, Hawaii, Puerto Rico re-positioned lie southwest continental United States. defaults FALSE, can used states listed state argument. apply class = \"tibble\".","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_get_geometry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and Optionally Geoprocess ZCTAs — zi_get_geometry","text":"sf object ZCTAs matching parameters specified :     either nationwide file, specific state states, specific     county counties.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_get_geometry.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and Optionally Geoprocess ZCTAs — zi_get_geometry","text":"function contains options type ZCTA ,     optionally, state county data identified. type,     either five-digit three-digit ZCTA geometries available.     three-digit ZCTAs created geoprocessing five-digit boundaries     year, applying modest amount simplification     (sf::st_simplify()) reduce file size. source files     available GitHub https://github.com/chris-prener/zcta3. Since ZCTAs cross state lines, two methods used create     geometry data years 2012 beyond states years counties.     \"intersect\" method  return ZCTAs border states     counties selected.  cases, result ZCTAs     returned actually within states counties selected.     Conversely, \"centroid\" method return ZCTAs whose     centroids (geographical centers) lie within states counties named.     cases, return fewer ZCTAs actually lie within     states counties selected. Users need review data carefully     likely need use include exclude arguments     finalize geographies returned. state-level data 2010 2011, Census Bureau published individual     state files utilized automatically zippeR.     county-level data requested years, state-specific file     used base identifying ZCTAs within counties using     either \"intersect\" \"centroid\" method described .","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_get_geometry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Optionally Geoprocess ZCTAs — zi_get_geometry","text":"","code":"# \\donttest{   # five-digit ZCTAs   ## download all ZCTAs for 2020 including territories   zi_get_geometry(year = 2020, territory = c(\"AS\", \"GU\", \"MP\", \"PR\", \"VI\"),       shift_geo = TRUE) #> Warning: error 1 in extracting from zip file #> Error: Cannot open \"/tmp/Rtmp82OOpo\"; The source could be corrupt or not supported. See `st_drivers()` for a list of supported formats.    ## download all ZCTAs for 2020 excluding territories   zi_get_geometry(year = 2020, shift_geo = TRUE) #> Warning: error 1 in extracting from zip file #> Error: Cannot open \"/tmp/Rtmp82OOpo\"; The source could be corrupt or not supported. See `st_drivers()` for a list of supported formats.    ## download all ZCTAs in a selection of states, intersects method   zi_get_geometry(year = 2020, state = c(\"IA\", \"IL\", \"MO\"), method = \"intersect\") #> Warning: error 1 in extracting from zip file #> Error: Cannot open \"/tmp/Rtmp82OOpo\"; The source could be corrupt or not supported. See `st_drivers()` for a list of supported formats.    ## download all ZCTAs in a single county - St. Louis City, MO   zi_get_geometry(year = 2020, state = \"MO\", county = \"29510\",       method = \"intersect\") #> Warning: error 1 in extracting from zip file #> Error: Cannot open \"/tmp/Rtmp82OOpo\"; The source could be corrupt or not supported. See `st_drivers()` for a list of supported formats.    # three-digit ZCTAs   ## download all ZCTAs for 2018 including territories   zi_get_geometry(year = 2018, territory = c(\"AS\", \"GU\", \"MP\", \"PR\", \"VI\"),       shift_geo = TRUE) #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   2%   |                                                                               |==                                                                    |   3%   |                                                                               |===                                                                   |   4%   |                                                                               |===                                                                   |   5%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |=====                                                                 |   8%   |                                                                               |======                                                                |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |=======                                                               |  11%   |                                                                               |========                                                              |  11%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |=========                                                             |  14%   |                                                                               |==========                                                            |  14%   |                                                                               |==========                                                            |  15%   |                                                                               |===========                                                           |  15%   |                                                                               |===========                                                           |  16%   |                                                                               |============                                                          |  17%   |                                                                               |============                                                          |  18%   |                                                                               |=============                                                         |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  19%   |                                                                               |==============                                                        |  20%   |                                                                               |==============                                                        |  21%   |                                                                               |===============                                                       |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  22%   |                                                                               |================                                                      |  23%   |                                                                               |=================                                                     |  24%   |                                                                               |=================                                                     |  25%   |                                                                               |==================                                                    |  25%   |                                                                               |==================                                                    |  26%   |                                                                               |===================                                                   |  27%   |                                                                               |===================                                                   |  28%   |                                                                               |====================                                                  |  28%   |                                                                               |====================                                                  |  29%   |                                                                               |=====================                                                 |  29%   |                                                                               |=====================                                                 |  30%   |                                                                               |======================                                                |  31%   |                                                                               |======================                                                |  32%   |                                                                               |=======================                                               |  32%   |                                                                               |=======================                                               |  33%   |                                                                               |========================                                              |  34%   |                                                                               |========================                                              |  35%   |                                                                               |=========================                                             |  35%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  36%   |                                                                               |==========================                                            |  37%   |                                                                               |==========================                                            |  38%   |                                                                               |===========================                                           |  38%   |                                                                               |===========================                                           |  39%   |                                                                               |============================                                          |  39%   |                                                                               |============================                                          |  40%   |                                                                               |============================                                          |  41%   |                                                                               |=============================                                         |  41%   |                                                                               |=============================                                         |  42%   |                                                                               |==============================                                        |  42%   |                                                                               |==============================                                        |  43%   |                                                                               |==============================                                        |  44%   |                                                                               |===============================                                       |  44%   |                                                                               |===============================                                       |  45%   |                                                                               |================================                                      |  45%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |=================================                                     |  48%   |                                                                               |==================================                                    |  48%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |===================================                                   |  51%   |                                                                               |====================================                                  |  51%   |                                                                               |====================================                                  |  52%   |                                                                               |=====================================                                 |  52%   |                                                                               |=====================================                                 |  53%   |                                                                               |======================================                                |  54%   |                                                                               |======================================                                |  55%   |                                                                               |=======================================                               |  55%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  56%   |                                                                               |========================================                              |  57%   |                                                                               |========================================                              |  58%   |                                                                               |=========================================                             |  58%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |==========================================                            |  61%   |                                                                               |===========================================                           |  61%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  62%   |                                                                               |============================================                          |  63%   |                                                                               |=============================================                         |  64%   |                                                                               |=============================================                         |  65%   |                                                                               |==============================================                        |  65%   |                                                                               |==============================================                        |  66%   |                                                                               |===============================================                       |  67%   |                                                                               |===============================================                       |  68%   |                                                                               |================================================                      |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  70%   |                                                                               |==================================================                    |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  72%   |                                                                               |===================================================                   |  73%   |                                                                               |===================================================                   |  74%   |                                                                               |====================================================                  |  74%   |                                                                               |====================================================                  |  75%   |                                                                               |=====================================================                 |  75%   |                                                                               |=====================================================                 |  76%   |                                                                               |======================================================                |  77%   |                                                                               |======================================================                |  78%   |                                                                               |=======================================================               |  78%   |                                                                               |=======================================================               |  79%   |                                                                               |========================================================              |  79%   |                                                                               |========================================================              |  80%   |                                                                               |========================================================              |  81%   |                                                                               |=========================================================             |  81%   |                                                                               |=========================================================             |  82%   |                                                                               |==========================================================            |  82%   |                                                                               |==========================================================            |  83%   |                                                                               |===========================================================           |  84%   |                                                                               |===========================================================           |  85%   |                                                                               |============================================================          |  85%   |                                                                               |============================================================          |  86%   |                                                                               |=============================================================         |  86%   |                                                                               |=============================================================         |  87%   |                                                                               |=============================================================         |  88%   |                                                                               |==============================================================        |  88%   |                                                                               |==============================================================        |  89%   |                                                                               |===============================================================       |  89%   |                                                                               |===============================================================       |  90%   |                                                                               |===============================================================       |  91%   |                                                                               |================================================================      |  91%   |                                                                               |================================================================      |  92%   |                                                                               |=================================================================     |  92%   |                                                                               |=================================================================     |  93%   |                                                                               |=================================================================     |  94%   |                                                                               |==================================================================    |  94%   |                                                                               |==================================================================    |  95%   |                                                                               |===================================================================   |  95%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |====================================================================  |  98%   |                                                                               |===================================================================== |  98%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================|  99%   |                                                                               |======================================================================| 100% #> Warning: error 1 in extracting from zip file #> Cannot open layer cb_2020_us_state_20m #> Error: Opening layer failed. # }"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Label ZIP Codes with Contextual Data — zi_label","title":"Label ZIP Codes with Contextual Data — zi_label","text":"function appends information city (five-digit    ZIP Codes) area (three-digit ZIP Codes) data frame containing    values. State returned types ZIP Codes. function    also optionally returns data Sectional Center Facilities (SCFs)    three-digit ZIP Codes.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label ZIP Codes with Contextual Data — zi_label","text":"","code":"zi_label(.data, input_var, label_source = \"UDS\", source_var,     type = \"zip5\", include_scf = FALSE, vintage = 2022)"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label ZIP Codes with Contextual Data — zi_label","text":".data \"input object\" data.frame tibble contains ZIP Codes crosswalked. input_var column input data contains five-digit ZIP Codes. input numeric, transformed character data leading zeros added. label_source Required character scalar data frame; specifies source label data. either 'UDS' (default) 'USPS', data frame containing custom dictionary. source_var Character scalar, required label_source data frame containing custom dictionary; specifies column name dictionary object contains ZIP Codes. type Character scalar, required label_source either label_source 'UDS' 'USPS'; one either 'zip3' 'zip5'.  'zip3' type available 'USPS' source, 'zip5' type available 'UDS'. include_scf logical scalar required label_source = 'USPS' type = 'zip3'; specifying whether include SCF (Sectional Center Facility) ID output. default FALSE. vintage Character numeric scalar, required label_source either label_source 'UDS' 'USPS'; specifying date label_source = 'USPS' year data label_source = 'UDS'. zip_load_labels_list() function can used see available date values label_source = 'USPS'.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label ZIP Codes with Contextual Data — zi_label","text":"tibble containing original data additional columns     selected label data set appended.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_label.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Label ZIP Codes with Contextual Data — zi_label","text":"Labels approximations actual location ZIP Code.     five-digit ZIP Codes, city state may may correspond     individuals' mailing address city (since multiple cities may     accepted valid USPS particular ZIP Code) state (since ZIP     Codes may cross state lines). three-digit ZIP Codes, area state may may correspond     individuals' mailing address state (since SCFs cover multiple states).     example, three digit ZIP Code 010 covers Western Massachusetts     practice, assigned state Connecticut.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Label ZIP Codes with Contextual Data — zi_label","text":"","code":"# create sample data df <- data.frame(   id = c(1:3),   zip5 = c(\"63005\", \"63139\", \"63636\"),   zip3 = c(\"630\", \"631\", \"636\") )  # UDS crosswalk # \\donttest{   zi_label(df, input_var = zip5, label_source = \"UDS\", vintage = 2022) #> # A tibble: 3 × 6 #>   zip5     id zip3  label_city   label_state label_type    #>   <chr> <int> <chr> <chr>        <chr>       <chr>         #> 1 63005     1 630   Chesterfield MO          Zip Code Area #> 2 63139     2 631   Saint Louis  MO          Zip Code Area #> 3 63636     3 636   Des Arc      MO          Zip Code Area # }  # USPS crosswalk # \\donttest{   zi_label(df, input_var = zip3, label_source = \"USPS\", type = \"zip3\",     vintage = 202408) #> # A tibble: 3 × 5 #>   zip3     id zip5  label_area label_state #>   <chr> <int> <chr> <chr>      <chr>       #> 1 630       1 63005 ST LOUIS   MO          #> 2 631       2 63139 ST LOUIS   MO          #> 3 636       3 63636 ST LOUIS   MO          # }  # custom dictionary ## load sample ZIP3 label data to simulate custom dictionary mo_label <- zi_mo_usps  ## label zi_label(df, input_var = zip3, label_source = mo_label, source_var = zip3,   type = \"zip3\") #> # A tibble: 3 × 5 #>   zip3     id zip5  label_area label_state #>   <chr> <int> <chr> <chr>      <chr>       #> 1 630       1 63005 ST LOUIS   MO          #> 2 631       2 63139 ST LOUIS   MO          #> 3 636       3 63636 ST LOUIS   MO"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_list_zctas.html","id":null,"dir":"Reference","previous_headings":"","what":"List ZCTA GEOIDs for States — zi_list_zctas","title":"List ZCTA GEOIDs for States — zi_list_zctas","text":"function returns vector GEOIDs represent ZCTAs     around states, depending method selected. two methods     included described Details .","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_list_zctas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List ZCTA GEOIDs for States — zi_list_zctas","text":"","code":"zi_list_zctas(year, state, method)"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_list_zctas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List ZCTA GEOIDs for States — zi_list_zctas","text":"year four-digit numeric scalar year. zippeR currently supports data 2010 2021. state scalar vector state abbreviations (e.x. \"MO\") FIPS codes (e.x. 29). method character scalar - either \"intersect\" \"centroid\". See Details .","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_list_zctas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List ZCTA GEOIDs for States — zi_list_zctas","text":"vector GEOIDs representing ZCTAs around state selected.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_list_zctas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List ZCTA GEOIDs for States — zi_list_zctas","text":"Since ZCTAs cross state lines, two methods used create     vectors. \"intersect\" method return ZCTAs border     state selected. cases, result ZCTAs     returned actually within states(s) named     state argument. Conversely, \"centroid\" method     return ZCTAs whose centroids (geographical centers) lie within     states named. cases, return fewer ZCTAs     actually lie within state selected. Users need review     data carefully , using zipperR functions,     likely need use include exclude arguments     finalize geographies returned.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_list_zctas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List ZCTA GEOIDs for States — zi_list_zctas","text":"","code":"# Missouri ZCTAs, intersect method ## return list mo_zctas <- zi_list_zctas(year = 2021, state = \"MO\", method = \"intersect\")  ## preview ZCTAs mo_zctas[1:10] #>  [1] \"51640\" \"52542\" \"52573\" \"52626\" \"63005\" \"63010\" \"63011\" \"63012\" \"63013\" #> [10] \"63014\"  # Missouri ZCTAs, centroid method ## return list mo_zctas <- zi_list_zctas(year = 2021, state = \"MO\", method = \"centroid\")  ## preview ZCTAs mo_zctas[1:10] #>  [1] \"63005\" \"63010\" \"63011\" \"63012\" \"63013\" \"63014\" \"63015\" \"63016\" \"63017\" #> [10] \"63019\""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_load_crosswalk.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Crosswalk Files — zi_load_crosswalk","title":"Load Crosswalk Files — zi_load_crosswalk","text":"Spatial data USPS ZIP Codes published U.S.     Postal Service U.S. Census Bureau. Instead, ZIP Codes can     converted variety Census Bureau geographies using crosswalk files.     function reads ZIP Code ZIP Code Tabulation Area (ZCTA) crosswalk     files former UDS Mapper project, sunset American     Academy Family Physicians early 2024. also provides access     U.S. Department Housing Urban Development's ZIP Code crosswalk files,     provide similar functionality converting ZIP Codes variety     geographies including counties.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_load_crosswalk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Crosswalk Files — zi_load_crosswalk","text":"","code":"zi_load_crosswalk(zip_source = \"UDS\", year, qtr = NULL, target = NULL,     query = NULL, key = NULL)"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_load_crosswalk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Crosswalk Files — zi_load_crosswalk","text":"zip_source Required character scalar; specifies source ZIP Code crosswalk data. can one either \"UDS\" (default) \"HUD\". year Required four-digit numeric scalar year; varies based source. \"UDS\", years 2009 2023 available. \"HUD\", years 2010 2024 available. qtr Numeric scalar, required zip_code \"HUD\". Integer value 1 4, representing quarter year. target Character scalar, required zip_code \"HUD\". Can one \"TRACT\", \"COUNTY\", \"CBSA\", \"CBSADIV\", \"CD\", \"COUNTYSUB\". query Scalar vector, required zip_code \"HUD\". can five-digit numeric character ZIP Code, vector ZIP Codes, two-letter character state abbreviation, \"\". key Optional zip_code \"HUD\". character string containing HUD API key. Alternatively, can stored .RProfile hud_key.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_load_crosswalk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Crosswalk Files — zi_load_crosswalk","text":"tibble containing crosswalk file.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_load_crosswalk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Crosswalk Files — zi_load_crosswalk","text":"","code":"# \\donttest{  # former UDS mapper crosswalks  zi_load_crosswalk(zip_source = \"UDS\", year = 2020) #> # A tibble: 41,099 × 6 #>    ZIP   PO_NAME    STATE ZIP_TYPE                           ZCTA  ZIP_JOIN_TYPE #>    <chr> <chr>      <chr> <chr>                              <chr> <chr>         #>  1 00501 Holtsville NY    Post Office or large volume custo… 11742 Spatial join… #>  2 00544 Holtsville NY    Post Office or large volume custo… 11742 Spatial join… #>  3 00601 Adjuntas   PR    Zip Code Area                      00601 Zip matches … #>  4 00602 Aguada     PR    Zip Code Area                      00602 Zip matches … #>  5 00603 Aguadilla  PR    Zip Code Area                      00603 Zip matches … #>  6 00604 Aguadilla  PR    Post Office or large volume custo… 00603 Spatial join… #>  7 00605 Aguadilla  PR    Post Office or large volume custo… 00603 Spatial join… #>  8 00606 Maricao    PR    Zip Code Area                      00606 Zip matches … #>  9 00610 Anasco     PR    Zip Code Area                      00610 Zip matches … #> 10 00611 Angeles    PR    Post Office or large volume custo… 00641 Spatial join… #> # ℹ 41,089 more rows # }  if (FALSE) { # \\dontrun{  # HUD crosswalks  # you will need to replace INSERT_HUD_KEY with your own key  ## ZIP Code to CBSA crosswalk for all ZIP Codes  zi_load_crosswalk(zip_source = \"HUD\", year = 2023, qtr = 1, target = \"CBSA\",      query = \"all\", key = INSERT_HUD_KEY)   ## ZIP Code to County crosswalk for all ZIP Codes in Missouri  zi_load_crosswalk(zip_source = \"HUD\", year = 2023, qtr = 1, target = \"COUNTY\",      query = \"MO\", key = INSERT_HUD_KEY)   ## ZIP Code to Tract crosswalk for ZIP Code 63139 in St. Louis City  zi_load_crosswalk(zip_source = \"HUD\", year = 2023, qtr = 1, target = \"TRACT\",      query = 63139, key = INSERT_HUD_KEY) } # }"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_load_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Label Data — zi_load_labels","title":"Load Label Data — zi_load_labels","text":"function loads specific label data set can used     label five three-digit ZIP codes data frame.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_load_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Label Data — zi_load_labels","text":"","code":"zi_load_labels(source = \"UDS\", type = \"zip5\", include_scf = FALSE,     vintage = 2022)"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_load_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Label Data — zi_load_labels","text":"source required character scalar; specifies source label data. supported sources 'UDS' (default) 'USPS'. type required character scalar; one either  'zip3' 'zip5'.  'zip3' type available 'USPS' source, 'zip5' type available 'UDS'. include_scf logical scalar required source = 'USPS' type = 'zip3'; specifying whether include SCF (Sectional Center Facility) ID output. default FALSE. vintage required character numeric scalar; specifying date source = 'USPS' year data source = 'UDS'. zip_load_labels_list() function can used see available date values source = 'USPS'.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_load_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Label Data — zi_load_labels","text":"tibble specified label data either five three-digit     ZIP Codes.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_load_labels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load Label Data — zi_load_labels","text":"Labels approximations actual location ZIP Code.     five-digit ZIP Codes, city state may may correspond     individuals' mailing address city (since multiple cities may     accepted valid USPS particular ZIP Code) state (since ZIP     Codes may cross state lines). three-digit ZIP Codes, area state may may correspond     individuals' mailing address state (since SCFs cover multiple states).     example, three digit ZIP Code 010 covers Western Massachusetts     practice, assigned state Connecticut.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_load_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Label Data — zi_load_labels","text":"","code":"# \\donttest{   # zip5 labels via UDS   zi_load_labels(source = \"UDS\", type = \"zip5\", vintage = 2022) #> # A tibble: 41,053 × 4 #>    zip5  label_city label_state label_type                           #>    <chr> <chr>      <chr>       <chr>                                #>  1 00501 Holtsville NY          Post Office or large volume customer #>  2 00544 Holtsville NY          Post Office or large volume customer #>  3 00601 Adjuntas   PR          Zip Code Area                        #>  4 00602 Aguada     PR          Zip Code Area                        #>  5 00603 Aguadilla  PR          Zip Code Area                        #>  6 00604 Aguadilla  PR          Post Office or large volume customer #>  7 00605 Aguadilla  PR          Post Office or large volume customer #>  8 00606 Maricao    PR          Zip Code Area                        #>  9 00610 Anasco     PR          Zip Code Area                        #> 10 00611 Angeles    PR          Post Office or large volume customer #> # ℹ 41,043 more rows    # zip3 labels via USPS   zi_load_labels(source = \"USPS\", type = \"zip3\", vintage = 202408) #> # A tibble: 931 × 3 #>    zip3  label_area label_state #>    <chr> <chr>      <chr>       #>  1 005   MID-ISLAND NY          #>  2 006   SAN JUAN   PR          #>  3 007   SAN JUAN   PR          #>  4 008   SAN JUAN   PR          #>  5 009   SAN JUAN   PR          #>  6 010   HARTFORD   CT          #>  7 011   HARTFORD   CT          #>  8 012   HARTFORD   CT          #>  9 013   CENTRAL    MA          #> 10 014   CENTRAL    MA          #> # ℹ 921 more rows # }"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_load_labels_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Load List of Available Label Data Sets — zi_load_labels_list","title":"Load List of Available Label Data Sets — zi_load_labels_list","text":"function loads list available label data sets can    used label ZIP Codes. Currently, three-digit ZIP Codes    supported.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_load_labels_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load List of Available Label Data Sets — zi_load_labels_list","text":"","code":"zi_load_labels_list(type = \"zip3\")"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_load_labels_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load List of Available Label Data Sets — zi_load_labels_list","text":"type character scalar specifying type label data load. supported type  'zip3' (three-digit ZIP Codes).","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_load_labels_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load List of Available Label Data Sets — zi_load_labels_list","text":"tibble containing date values can used zi_load_labels.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_load_labels_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load List of Available Label Data Sets — zi_load_labels_list","text":"","code":"# \\donttest{   zi_load_labels_list(type = \"zip3\") #> # A tibble: 1 × 2 #>   type    date #>   <chr>  <int> #> 1 zip3  202408 # }"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_hud.html","id":null,"dir":"Reference","previous_headings":"","what":"Missouri HUD ZIP Code to County Crosswalk, 2023 — zi_mo_hud","title":"Missouri HUD ZIP Code to County Crosswalk, 2023 — zi_mo_hud","text":"tibble containing HUD ZIP Code County Crosswalk file     Missouri's ZIP Codes 2023's first quarter.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_hud.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missouri HUD ZIP Code to County Crosswalk, 2023 — zi_mo_hud","text":"","code":"data(zi_mo_hud)"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_hud.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Missouri HUD ZIP Code to County Crosswalk, 2023 — zi_mo_hud","text":"data frame 1749 rows 8 variables: ZIP five-digit United States Postal Service ZIP Code GEOID five-digit county FIPS code RES_RATIO ZIP Codes cross county boundaries, proportion       ZIP Code's residential customers given county BUS_RATIO ZIP Codes cross county boundaries, proportion       ZIP Code's commercial customers given county OTH_RATIO ZIP Codes cross county boundaries, proportion       ZIP Code's customers given county TOT_RATIO ZIP Codes cross county boundaries, proportion       ZIP Code's total customers given county CITY United States Postal Service city name STATE United States Postal Service state abbreviation","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_hud.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Missouri HUD ZIP Code to County Crosswalk, 2023 — zi_mo_hud","text":"U.S. Department Housing Urban Development's ZIP Code crosswalk     files","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_hud.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Missouri HUD ZIP Code to County Crosswalk, 2023 — zi_mo_hud","text":"data included zi_mo_hud can replicated   following code: zi_load_crosswalk(zip_source = \"HUD\", year = 2023,   qtr = 1, target = \"COUNTY\", query = \"MO\"). assumes HUD API key   stored .Rprofile file hud_key.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_hud.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Missouri HUD ZIP Code to County Crosswalk, 2023 — zi_mo_hud","text":"","code":"utils::str(zi_mo_hud) #> tibble [1,749 × 8] (S3: tbl_df/tbl/data.frame) #>  $ ZIP      : chr [1:1749] \"63103\" \"63447\" \"63362\" \"63134\" ... #>  $ GEOID    : chr [1:1749] \"29510\" \"29111\" \"29113\" \"29189\" ... #>  $ RES_RATIO: num [1:1749] 1 1 1 1 1 1 1 1 1 1 ... #>  $ BUS_RATIO: num [1:1749] 1 1 1 1 1 1 1 1 1 1 ... #>  $ OTH_RATIO: num [1:1749] 1 1 1 1 1 1 1 1 1 1 ... #>  $ TOT_RATIO: num [1:1749] 1 1 1 1 1 1 1 1 1 1 ... #>  $ CITY     : chr [1:1749] \"SAINT LOUIS\" \"LA BELLE\" \"MOSCOW MILLS\" \"SAINT LOUIS\" ... #>  $ STATE    : chr [1:1749] \"MO\" \"MO\" \"MO\" \"MO\" ... utils::head(zi_mo_hud) #> # A tibble: 6 × 8 #>   ZIP   GEOID RES_RATIO BUS_RATIO OTH_RATIO TOT_RATIO CITY            STATE #>   <chr> <chr>     <dbl>     <dbl>     <dbl>     <dbl> <chr>           <chr> #> 1 63103 29510         1         1         1         1 SAINT LOUIS     MO    #> 2 63447 29111         1         1         1         1 LA BELLE        MO    #> 3 63362 29113         1         1         1         1 MOSCOW MILLS    MO    #> 4 63134 29189         1         1         1         1 SAINT LOUIS     MO    #> 5 65439 29093         1         1         1         1 BIXBY           MO    #> 6 65686 29209         1         1         1         1 KIMBERLING CITY MO"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_pop.html","id":null,"dir":"Reference","previous_headings":"","what":"Total Population and Median Household Income, Missouri ZCTAs 2022 — zi_mo_pop","title":"Total Population and Median Household Income, Missouri ZCTAs 2022 — zi_mo_pop","text":"tibble containing total population     median household income estimates 2018-2022 5-year     U.S. Census Bureau American Communiy Survey estimates Missouri     five-digit ZIP Code Tabulation Areas (ZCTAs).","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_pop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total Population and Median Household Income, Missouri ZCTAs 2022 — zi_mo_pop","text":"","code":"data(zi_mo_pop)"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_pop.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Total Population and Median Household Income, Missouri ZCTAs 2022 — zi_mo_pop","text":"data frame 2664 rows 4 variables: GEOID full GEOID string variable variable, either B01003_001 (total population)         B19013_001 (median household income) estimate value associated variable moe margin error associated variable","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_pop.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Total Population and Median Household Income, Missouri ZCTAs 2022 — zi_mo_pop","text":"U.S. Census Bureau American Community Survey","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_pop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Total Population and Median Household Income, Missouri ZCTAs 2022 — zi_mo_pop","text":"data included zi_mo_pop can replicated   following code: zi_get_demographics(year = 2022,   variables = c(\"B01003_001\", \"B19013_001\"), survey = \"acs5\").","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_pop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Total Population and Median Household Income, Missouri ZCTAs 2022 — zi_mo_pop","text":"","code":"utils::str(zi_mo_pop) #> tibble [2,664 × 4] (S3: tbl_df/tbl/data.frame) #>  $ GEOID   : chr [1:2664] \"50101\" \"50101\" \"50102\" \"50102\" ... #>  $ variable: chr [1:2664] \"B01003_001\" \"B19013_001\" \"B01003_001\" \"B19013_001\" ... #>  $ estimate: num [1:2664] 68 158750 127 NA 400 ... #>  $ moe     : num [1:2664] 36 146906 87 NA 109 ... utils::head(zi_mo_pop) #> # A tibble: 6 × 4 #>   GEOID variable   estimate    moe #>   <chr> <chr>         <dbl>  <dbl> #> 1 50101 B01003_001       68     36 #> 2 50101 B19013_001   158750 146906 #> 3 50102 B01003_001      127     87 #> 4 50102 B19013_001       NA     NA #> 5 50103 B01003_001      400    109 #> 6 50103 B19013_001    55938  10284"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_usps.html","id":null,"dir":"Reference","previous_headings":"","what":"Missouri USPS Three-digit ZIP Code Labels, August 2024 — zi_mo_usps","title":"Missouri USPS Three-digit ZIP Code Labels, August 2024 — zi_mo_usps","text":"tibble containing USPS Three-digit ZIP Code labels    August 2024.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_usps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missouri USPS Three-digit ZIP Code Labels, August 2024 — zi_mo_usps","text":"","code":"data(zi_mo_usps)"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_usps.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Missouri USPS Three-digit ZIP Code Labels, August 2024 — zi_mo_usps","text":"data frame 37 rows 3 variables: zip3 three-digit United States Postal Service ZIP Code label_area area associated three-digit ZIP Code label_state state associated three-digit ZIP Code","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_usps.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Missouri USPS Three-digit ZIP Code Labels, August 2024 — zi_mo_usps","text":"U.S. Postal Service Facility Access Shipment Tracking (FAST) Database","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_usps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Missouri USPS Three-digit ZIP Code Labels, August 2024 — zi_mo_usps","text":"data included zi_mo_usps can replicated   following code: zi_load_labels(type = \"zip3\", source = \"USPS\",   vintage = 202408). downloading data, subset   label_state == \"MO\".","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_usps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Missouri USPS Three-digit ZIP Code Labels, August 2024 — zi_mo_usps","text":"","code":"utils::str(zi_mo_usps) #> tibble [37 × 3] (S3: tbl_df/tbl/data.frame) #>  $ zip3       : chr [1:37] \"620\" \"622\" \"628\" \"629\" ... #>  $ label_area : chr [1:37] \"ST LOUIS\" \"ST LOUIS\" \"ST LOUIS\" \"ST LOUIS\" ... #>  $ label_state: chr [1:37] \"MO\" \"MO\" \"MO\" \"MO\" ... utils::head(zi_mo_usps) #> # A tibble: 6 × 3 #>   zip3  label_area label_state #>   <chr> <chr>      <chr>       #> 1 620   ST LOUIS   MO          #> 2 622   ST LOUIS   MO          #> 3 628   ST LOUIS   MO          #> 4 629   ST LOUIS   MO          #> 5 630   ST LOUIS   MO          #> 6 631   ST LOUIS   MO"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_zcta3.html","id":null,"dir":"Reference","previous_headings":"","what":"Missouri Three-digit ZCTAs, 2022 — zi_mo_zcta3","title":"Missouri Three-digit ZCTAs, 2022 — zi_mo_zcta3","text":"simple features data set containing geometric data     Missouri's three-digit ZIP Code Tabulation Areas (ZCTAs) 2022,     derived U.S. Census Bureau's 2022 TIGER/Line shapefiles.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_zcta3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missouri Three-digit ZCTAs, 2022 — zi_mo_zcta3","text":"","code":"data(zi_mo_zcta3)"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_zcta3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Missouri Three-digit ZCTAs, 2022 — zi_mo_zcta3","text":"data frame 31 rows 2 variables: ZCTA3 three-digit ZCTA value geometry simple features geometry","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_zcta3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Missouri Three-digit ZCTAs, 2022 — zi_mo_zcta3","text":"U.S. Census Bureau's TIGER/Line database","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_zcta3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Missouri Three-digit ZCTAs, 2022 — zi_mo_zcta3","text":"data included zi_mo_zcta3 can replicated   following code: zi_get_geometry(year = 2022, style = \"zcta3\",   state = \"MO\", method = \"intersect\").","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_mo_zcta3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Missouri Three-digit ZCTAs, 2022 — zi_mo_zcta3","text":"","code":"utils::str(zi_mo_zcta3) #> Classes ‘sf’ and 'data.frame':\t31 obs. of  2 variables: #>  $ ZCTA3   : chr  \"501\" \"516\" \"525\" \"526\" ... #>  $ geometry:sfc_MULTIPOLYGON of length 31; first list element: List of 21 #>   ..$ :List of 1 #>   .. ..$ : num [1:7, 1:2] -92.9 -92.9 -92.9 -92.9 -92.9 ... #>   ..$ :List of 1 #>   .. ..$ : num [1:38, 1:2] -93.7 -93.7 -93.6 -93.6 -93.6 ... #>   ..$ :List of 1 #>   .. ..$ : num [1:8, 1:2] -93.7 -93.7 -93.7 -93.7 -93.7 ... #>   ..$ :List of 1 #>   .. ..$ : num [1:27, 1:2] -93.2 -93.2 -93.2 -93.2 -93.2 ... #>   ..$ :List of 2 #>   .. ..$ : num [1:51, 1:2] -92.4 -92.4 -92.4 -92.4 -92.4 ... #>   .. ..$ : num [1:9, 1:2] -92.3 -92.3 -92.3 -92.3 -92.3 ... #>   ..$ :List of 1 #>   .. ..$ : num [1:9, 1:2] -95 -95 -95 -95 -95 ... #>   ..$ :List of 1 #>   .. ..$ : num [1:284, 1:2] -93.4 -93.4 -93.4 -93.4 -93.3 ... #>   ..$ :List of 1 #>   .. ..$ : num [1:352, 1:2] -94.3 -94.3 -94.3 -94.3 -94.3 ... #>   ..$ :List of 1 #>   .. ..$ : num [1:17, 1:2] -93.7 -93.7 -93.7 -93.7 -93.6 ... #>   ..$ :List of 1 #>   .. ..$ : num [1:7, 1:2] -93.4 -93.4 -93.4 -93.4 -93.4 ... #>   ..$ :List of 1 #>   .. ..$ : num [1:95, 1:2] -93.4 -93.4 -93.4 -93.4 -93.4 ... #>   ..$ :List of 1 #>   .. ..$ : num [1:144, 1:2] -93.8 -93.8 -93.7 -93.7 -93.7 ... #>   ..$ :List of 1 #>   .. ..$ : num [1:347, 1:2] -94.7 -94.7 -94.8 -94.8 -94.9 ... #>   ..$ :List of 1 #>   .. ..$ : num [1:746, 1:2] -93.9 -93.9 -93.9 -93.9 -93.9 ... #>   ..$ :List of 1 #>   .. ..$ : num [1:206, 1:2] -94.3 -94.3 -94.3 -94.3 -94.3 ... #>   ..$ :List of 1 #>   .. ..$ : num [1:10, 1:2] -93.3 -93.3 -93.3 -93.3 -93.3 ... #>   ..$ :List of 1 #>   .. ..$ : num [1:234, 1:2] -93.5 -93.5 -93.5 -93.5 -93.5 ... #>   ..$ :List of 3 #>   .. ..$ : num [1:579, 1:2] -93.1 -93.1 -93.1 -93.1 -93.1 ... #>   .. ..$ : num [1:5, 1:2] -92.9 -92.9 -92.9 -92.9 -92.9 ... #>   .. ..$ : num [1:6, 1:2] -92.8 -92.8 -92.8 -92.8 -92.8 ... #>   ..$ :List of 2 #>   .. ..$ : num [1:1521, 1:2] -93.3 -93.3 -93.2 -93.2 -93.2 ... #>   .. ..$ : num [1:10, 1:2] -93.2 -93.2 -93.2 -93.2 -93.2 ... #>   ..$ :List of 1 #>   .. ..$ : num [1:9, 1:2] -93.1 -93.1 -93.1 -93.1 -93.1 ... #>   ..$ :List of 1 #>   .. ..$ : num [1:363, 1:2] -93.7 -93.7 -93.6 -93.6 -93.6 ... #>   ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>  - attr(*, \"sf_column\")= chr \"geometry\" #>  - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA #>   ..- attr(*, \"names\")= chr \"ZCTA3\" utils::head(zi_mo_zcta3) #> Simple feature collection with 6 features and 1 field #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -95.88891 ymin: 37.93668 xmax: -88.97182 ymax: 42.69899 #> Geodetic CRS:  NAD83 #>   ZCTA3                       geometry #> 1   501 MULTIPOLYGON (((-92.9414 41... #> 2   516 MULTIPOLYGON (((-95.36826 4... #> 3   525 MULTIPOLYGON (((-91.91263 4... #> 4   526 MULTIPOLYGON (((-91.43297 4... #> 5   620 MULTIPOLYGON (((-90.61378 3... #> 6   630 MULTIPOLYGON (((-90.32484 3..."},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_prep_hud.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert HUD Crosswalk Data to Finalized Crosswalk — zi_prep_hud","title":"Convert HUD Crosswalk Data to Finalized Crosswalk — zi_prep_hud","text":"output zi_load_crosswalk() HUD data requires     additional processing used zi_crosswalk() function.     function prepares HUD data use joins.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_prep_hud.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert HUD Crosswalk Data to Finalized Crosswalk — zi_prep_hud","text":"","code":"zi_prep_hud(.data, by, return_max = TRUE)"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_prep_hud.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert HUD Crosswalk Data to Finalized Crosswalk — zi_prep_hud","text":".data output zi_load_crosswalk() HUD data. Character scalar; column name use identifying best match given ZIP Code. either \"residential\", \"commercial\", \"total\". return_max Logical scalar; TRUE (default), county highest proportion ZIP Code type returned. ZIP Code straddles two states, two records returned. FALSE, records ZIP Code returned. tie exists (.e. two counties contain half addresses), county lowest GEOID value returned.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_prep_hud.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert HUD Crosswalk Data to Finalized Crosswalk — zi_prep_hud","text":"tibble prepared use crosswalk.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_prep_hud.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert HUD Crosswalk Data to Finalized Crosswalk — zi_prep_hud","text":"","code":"# load sample crosswalk data mo_xwalk <- zi_mo_hud    # the above data can be replicated with the following code:   # zi_load_crosswalk(zip_source = \"HUD\", year = 2023, qtr = 1,   #   target = \"COUNTY\", query = \"MO\")  # prep crosswalk # when a ZIP Code crosses county boundaries, the portion with the largest # number of residential addresses will be returned zi_prep_hud(mo_xwalk, by = \"residential\", return_max = TRUE) #> Warning: error 1 in extracting from zip file #> Cannot open layer cb_2022_us_state_20m #> Error: Opening layer failed."},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_repair.html","id":null,"dir":"Reference","previous_headings":"","what":"Repair ZIP Code or ZCTA Vector — zi_repair","title":"Repair ZIP Code or ZCTA Vector — zi_repair","text":"function repairs two four conditions identified     validation checks zi_validate(). two     conditions, values conveted NA. See Details     specific changes made.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_repair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repair ZIP Code or ZCTA Vector — zi_repair","text":"","code":"zi_repair(x, style = \"zcta5\")"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_repair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repair ZIP Code or ZCTA Vector — zi_repair","text":"x vector containing ZIP ZCTA values repaired. style character scalar - either \"zcta5\" \"zcta3\".","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_repair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Repair ZIP Code or ZCTA Vector — zi_repair","text":"repaired vector ZIP ZCTA values.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_repair.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Repair ZIP Code or ZCTA Vector — zi_repair","text":"zi_repair() function addresses four conditions: input vector numeric, converted character data. values less five characters (style = \"zcta5\",      default), three characters (style = \"zcta3\"),      padded leading zeros. input values five characters (style = \"zcta5\",      default), three characters (style = \"zcta3\"),      converted NA. input values non-numeric characters,      converted NA. Since two four steps result NA values, strongly recommended attempt manually fix issues first.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_repair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Repair ZIP Code or ZCTA Vector — zi_repair","text":"","code":"# sample five-digit ZIPs with character zips <- c(\"63088\", \"63108\", \"zip\")  # failed validation zi_validate(zips) #> [1] FALSE  # repair zips <- zi_repair(zips) #> Warning: NAs introduced by coercion  # successful validation zi_validate(zips) #> [1] TRUE"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate ZIP Code or ZCTA Vector — zi_validate","title":"Validate ZIP Code or ZCTA Vector — zi_validate","text":"function validates vectors ZIP Code ZCTA values.     used internally throughout zippeR data validation,     exported facilitate troubleshooting.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate ZIP Code or ZCTA Vector — zi_validate","text":"","code":"zi_validate(x, style = \"zcta5\", verbose = FALSE)"},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate ZIP Code or ZCTA Vector — zi_validate","text":"x vector containing ZIP ZCTA values validated. style character scalar - either \"zcta5\" (default) \"zcta3\". verbose logical scalar; FALSE (default), overall evaluation returned. TRUE, tibble object listing validation criteria results returned.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate ZIP Code or ZCTA Vector — zi_validate","text":"Either logical value (verbose = FALSE) tibble     containing validation criteria results.","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_validate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate ZIP Code or ZCTA Vector — zi_validate","text":"zi_validate() function checks four conditions: input vector character data? important USPS's      use leading zeros ZIP codes ZCTAs. values five characters (style = \"zcta5\", default),      three characters (style = \"zcta3\")? input values five characters (style = \"zcta5\",      default), three characters (style = \"zcta3\")? input values non-numeric characters? questions provide basis repairing issues identified zi_repair().","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/reference/zi_validate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate ZIP Code or ZCTA Vector — zi_validate","text":"","code":"# sample five-digit ZIPs zips <- c(\"63088\", \"63108\", \"63139\")  # successful validation zi_validate(zips) #> [1] TRUE  # sample five-digit ZIPs in data frame zips <- data.frame(id = c(1:3), ZIP = c(\"63139\", \"63108\", \"00501\"), stringsAsFactors = FALSE)  # successful validation zi_validate(zips$ZIP) #> [1] TRUE  # sample five-digit ZIPs with character zips <- c(\"63088\", \"63108\", \"zip\")  # failed validation zi_validate(zips) #> [1] FALSE zi_validate(zips, verbose = TRUE) #> # A tibble: 4 × 2 #>   condition                                   result #>   <chr>                                       <lgl>  #> 1 Input is a character vector?                TRUE   #> 2 All input values have 5 characters?         FALSE  #> 3 No input values are over 5 characters long? TRUE   #> 4 All input values are numeric?               FALSE"},{"path":"https://pfizer-opensource.github.io/zippeR/news/index.html","id":"zipper-0119000","dir":"Changelog","previous_headings":"","what":"zippeR 0.1.1.9000","title":"zippeR 0.1.1.9000","text":"Updates README.md NEWS.md reflect fact package now CRAN Resolve R CMD check issue examples zi_crosswalk zi_load_crosswalk fail CI HUD key available ","code":""},{"path":"https://pfizer-opensource.github.io/zippeR/news/index.html","id":"zipper-010","dir":"Changelog","previous_headings":"","what":"zippeR 0.1.0","title":"zippeR 0.1.0","text":"CRAN release: 2024-07-14 Initial CRAN submission version contains functionality working UDS HUD ZIP Code crosswalk files well Census Bureau ZCTA geometries demographic data","code":""}]
